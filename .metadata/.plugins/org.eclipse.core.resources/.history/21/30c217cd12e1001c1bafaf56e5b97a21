package com.example.desafioWL.controller;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.example.desafioWL.entities.User;
import com.example.desafioWL.repositories.UserRepository;
import com.example.desafioWL.resources.exceptions.ResourceNotFoundException;

@Service
@Transactional
@Controller
public class UserController {

	@Autowired
	private UserRepository repo;

	public List<User> listAll(){
		return (List<User>) this.repo.findAll();
	}

	public User getUser(Long id) {
		return this.repo.findById(id).orElseThrow(() -> new ResourceNotFoundException(id));
	}
	
	public void salvar(User user) { /
		this.repo.save(user);
	}
	
	public User update(Long id, User obj) {
		User entity = rep.getOne(id);
		updateData(entity, obj);
		return rep.save(entity);
	}

	private void updateData(User entity, User obj) {
		entity.setName(obj.getName());
		entity.setCpf(obj.getCpf());
		entity.setItem(obj.getItem());
	}

	public void delete(Long id) {
		this.rep.deleteById(id);
	}
	
	@RequestMapping(value = "/") //página inicial
	public String callIndex(){
		return "index";
	}
	
	@RequestMapping(value = "/home") //página com a lista
	public String callList(Model model) {
		List <User> listUsers = listAll();
		model.addAttribute("listUsers", listUsers);
		return "home";
	}

	@RequestMapping(value = "/new")
	public ModelAndView callNew() {
		ModelAndView model = new ModelAndView("new");
		User user = new User();
		model.addObject("user", user);
		return model;
	}

	@RequestMapping(value = "/update/{id}")
	public ModelAndView callUpdate(@PathVariable(name = "id") Long id) {
		ModelAndView model  = new ModelAndView("update");
		User user = this.getUser(id);
		model.addObject("user", user);
		return model;
	}

	@RequestMapping(value = "/save")
	public String callSave(@ModelAttribute("user") User user) {
		this.save(user);
		return "redirect:/home";
	}

	@RequestMapping(value = "/delete/{id}")
	public String callDelete(@PathVariable(name = "id") Long id) {
		this.delete(id);
		return "redirect:/home";
	}
}
