package com.example.desafioWL.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.example.desafioWL.entities.Pedido;
import com.example.desafioWL.entities.pk.PedidoPK;
import com.example.desafioWL.repositories.PedidoRepository;

@Controller
public class PedidoController {
	
	@Autowired
	private PedidoRepository rep;
	
	public PedidoController(PedidoRepository rep) {
		this.rep = rep;
	}
	
	//Mapenado o URl
	@GetMapping("/pedidos")
	public String pedidos(Model model) {
		model.addAttribute("ListaPedidos", rep.findAll());
		return "pedidos/index";
	}
	
	//cadastrando pedido
	@GetMapping("/pedidos/cadastrar")
	public String cadastrarPedido(@ModelAttribute("pedido") Pedido pedido) {
		return "pedidos/form";
	}
	
	//Encontrar o ID
	@GetMapping("pedidos/{id}")
	public String alterarPedido(@PathVariable("id") PedidoPK id, Model model) {
		Optional<Pedido> pedidoOpt = rep.findById(id);
		if (pedidoOpt.isEmpty()) {
			throw new IllegalArgumentException("Pedido inválido.");
		}
		
		model.addAttribute("pedido", pedidoOpt.get());
		return "pedidos/form";
	}
	
	//salvando pedido
	@PostMapping("/pedidos/salvar")
	public String salvarPedido(@ModelAttribute("pedido") Pedido pedido) {
		rep.save(pedido);
		return "pedidos/form";
	}
	
	//remover pedido
	@GetMapping("/pedidos/remover/{id}")
	public String removerPedido(@PathVariable("id") PedidoPK id) {
		Optional<Pedido> pedidoOpt = rep.findById(id);
		if (pedidoOpt.isEmpty()) {
			throw new IllegalArgumentException("Pedido inválido.");
		}
		
		rep.delete(pedidoOpt.get());
		return "redirect:/pedidos";
	}
}
